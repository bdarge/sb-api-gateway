basePath: /v1
definitions:
  Account:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  Customers:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Customer'
        type: array
      limit:
        format: int32
        type: integer
      page:
        format: int32
        type: integer
      total:
        format: int32
        type: integer
    type: object
  ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  Transaction:
    properties:
      createdAt:
        type: string
      createdBy:
        type: integer
      currency:
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      customerId:
        type: integer
      deletedAt:
        type: string
      deliveryDate:
        type: string
      description:
        type: string
      id:
        description: https://stackoverflow.com/a/21152548
        type: integer
      items:
        items:
          $ref: '#/definitions/TransactionItem'
        type: array
      requestType:
        enum:
        - order
        - quote
        type: string
      updatedAt:
        type: string
    required:
    - createdBy
    - customerId
    - deliveryDate
    - description
    - requestType
    type: object
  TransactionItem:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        description: https://stackoverflow.com/a/21152548
        type: integer
      qty:
        type: integer
      unit:
        type: string
      unitPrice:
        type: number
      updatedAt:
        type: string
    type: object
  TransactionResponse:
    properties:
      id:
        type: integer
    type: object
  Transactions:
    properties:
      data:
        items:
          $ref: '#/definitions/Transaction'
        type: array
      limit:
        format: int32
        type: integer
      page:
        format: int32
        type: integer
      total:
        format: int32
        type: integer
    type: object
  models.AccountData:
    properties:
      email:
        type: string
      id:
        type: integer
    type: object
  models.Address:
    properties:
      city:
        type: string
      country:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        description: https://stackoverflow.com/a/21152548
        type: integer
      landline:
        type: string
      mobile:
        type: string
      postalCode:
        type: string
      state:
        type: string
      street:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  models.Business:
    properties:
      city:
        type: string
      country:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      hourlyRate:
        type: integer
      id:
        description: https://stackoverflow.com/a/21152548
        type: integer
      landline:
        type: string
      mobile:
        type: string
      name:
        type: string
      postalCode:
        type: string
      state:
        type: string
      street:
        type: string
      updatedAt:
        type: string
      vat:
        type: integer
    type: object
  models.Customer:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        description: https://stackoverflow.com/a/21152548
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    required:
    - email
    - name
    type: object
  models.Role:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.UpdateAddress:
    properties:
      city:
        type: string
      country:
        type: string
      id:
        type: integer
      landlinePhone:
        type: string
      mobilePhone:
        type: string
      postalCode:
        type: string
      street:
        type: string
    type: object
  models.UpdateCustomer:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.UpdateTransaction:
    properties:
      createdBy:
        type: integer
      currency:
        type: string
      customerId:
        type: integer
      deliveryDate:
        type: string
      description:
        type: string
      id:
        type: integer
      requestType:
        enum:
        - order
        - quote
        - ""
        type: string
    type: object
  models.UpdateUser:
    properties:
      address:
        $ref: '#/definitions/models.UpdateAddress'
      id:
        type: integer
      username:
        type: string
    type: object
  models.User:
    properties:
      account:
        $ref: '#/definitions/models.AccountData'
      address:
        $ref: '#/definitions/models.Address'
      businessId:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        description: https://stackoverflow.com/a/21152548
        type: integer
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      transactions:
        items:
          $ref: '#/definitions/Transaction'
        type: array
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: Swagger API for Business X.
  termsOfService: http://swagger.io/terms/
  title: SM Swagger API
  version: "1.0"
paths:
  /Customer/{id}:
    delete:
      operationId: delete_customer
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a customer
  /auth/login:
    post:
      operationId: login
      parameters:
      - description: Add login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Login'
      security:
      - Bearer: []
      summary: Authenticate a user
  /auth/register:
    post:
      operationId: register
      parameters:
      - description: Add account details
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/Account'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Account'
      summary: Register a user
  /business/{id}:
    get:
      operationId: get_business
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Business'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Get Business
    patch:
      operationId: update_business
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Business'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Update business
  /customer:
    get:
      operationId: get_customers
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit (max 100)
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Customers'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Get customers
    post:
      operationId: create_customer
      parameters:
      - description: Add customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/TransactionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Create a customer
  /customer/{id}:
    get:
      operationId: get_customer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Get customer
    patch:
      operationId: update_customer
      parameters:
      - description: Update customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCustomer'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Update a customer
  /transaction:
    get:
      operationId: get_transactions
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit (max 100)
        in: query
        name: limit
        type: integer
      - description: pass nothing, 'order' or 'quote'
        in: query
        name: requestType
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transactions'
      security:
      - Bearer: []
      summary: Get transactions
    post:
      operationId: create_transaction
      parameters:
      - description: Add transactions
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/Transaction'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/TransactionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Create a transaction, an order or a quote
  /transaction/{id}:
    delete:
      operationId: delete_transaction
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a transaction
    get:
      operationId: get_transaction
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Get transaction
    patch:
      operationId: update_transaction
      parameters:
      - description: Update transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTransaction'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Update a transaction
  /user/{id}:
    get:
      operationId: get_user
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Get User
    patch:
      operationId: update_user
      parameters:
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Update a user
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
