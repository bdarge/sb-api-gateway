FROM golang:1.25.2-alpine3.22 AS builder

LABEL org.opencontainers.image.description="Public API"

ENV APP=/app

WORKDIR $APP

RUN apk update && apk add curl unzip make

RUN PB_REL="https://github.com/protocolbuffers/protobuf/releases" && \
    curl -LO $PB_REL/download/v33.0/protoc-33.0-linux-aarch_64.zip

RUN unzip protoc-33.0-linux-aarch_64.zip -d $APP/.local

ENV PATH="${PATH}:$APP/.local/bin"

RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.36.10 && \
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.5.1 && \
    go install github.com/swaggo/swag/cmd/swag@v1.16.6 && \
    export PATH="$PATH:$(go env GOPATH)/bin"

WORKDIR /tmp/app

COPY . .

RUN swag init --parseDependency  --parseInternal --parseDepth 1  -g main.go -d cmd -o cmd/docs

RUN ls -al

RUN make proto && go mod download && go mod tidy

RUN go build -o ./build cmd/main.go

FROM golang:1.25.2-alpine3.22 AS dev

WORKDIR /app

COPY . .

RUN ["go", "install", "github.com/githubnemo/CompileDaemon@latest"]

ENTRYPOINT ["CompileDaemon", "-exclude=out/", "-build=go mod tidy && go build -o /app/bin /app/cmd/", "-command=/app/bin"]

FROM alpine:latest AS prod

RUN apk --no-cache add ca-certificates git bash

LABEL org.opencontainers.image.source=https://github.com/bdarge/sb-api-gateway

LABEL org.opencontainers.image.description="Small Business (sb) api gateway"

WORKDIR /app

COPY --from=builder /tmp/app/build /app/gateway

COPY --from=builder /tmp/app/cmd/docs /app/docs

EXPOSE 3000

CMD ["/app/gateway"]
